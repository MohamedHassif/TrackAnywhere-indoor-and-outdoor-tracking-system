#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <SoftwareSerial.h>
#include <TinyGPS.h>

// Replace with your network credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// Replace with your server URL and path
const char* serverUrl = "http://your_server.com/your_path";

// Define serial pins for GPS module
#define RX_PIN D7
#define TX_PIN D8

// Create GPS object
TinyGPS gps;

// Create software serial object for GPS module
SoftwareSerial ss(RX_PIN, TX_PIN);

// Initialize HTTP client
HTTPClient http;

void setup() {
  // Start serial communication
  Serial.begin(115200);

  // Initialize software serial for GPS module
  ss.begin(9600);

  // Connect to Wi-Fi network
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi");

  // Initialize GPS module
  gps.begin(9600);
}

void loop() {
  // Parse GPS data
  while (ss.available() > 0) {
    if (gps.encode(ss.read())) {
      // Retrieve latitude and longitude
      float latitude, longitude;
      gps.f_get_position(&latitude, &longitude);

      // Send data via HTTP POST request
      http.begin(serverUrl);
      http.addHeader("Content-Type", "application/x-www-form-urlencoded");
      String postData = "latitude=" + String(latitude) + "&longitude=" + String(longitude);
      int httpResponseCode = http.POST(postData);
      if (httpResponseCode > 0) {
        Serial.printf("HTTP POST request sent successfully: %d\n", httpResponseCode);
      } else {
        Serial.printf("HTTP POST request failed: %d\n", httpResponseCode);
      }
      http.end();
    }
  }
}
